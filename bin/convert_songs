#!/usr/bin/env ruby

require "rake"

class String
  def sanitise
    self.
      downcase.
      delete("\n").
      gsub("ä", "ae").gsub("ä", "ae").
      gsub("ö", "oe").
      gsub("ü", "ue").gsub("ü", "ue").
      gsub("ß", "ss").
      tr_s("^a-z0-9\-", "_")
  end

  def remove_leading_digits
    gsub(/^[\d\-_]*/, "")
  end
end

def bestname(path)
  dir      = File.dirname(path)
  basename = File.basename(path, ".*").
    sanitise.
    remove_leading_digits.
    concat(File.extname(path))

  i = 1

  begin
    digits = sprintf("%03d", i)
    name = digits + "_" + basename
    i += 1
  end while !Dir.glob(File.join(dir, "#{digits}*")).empty?

  File.join(dir, name)
end

def convert_m4a(file)
  newname = bestname(file.ext(".mp3"))
  puts "Converting #{file} -> #{newname}"
  system "ffmpeg", \
    "-i", file, \
    "-acodec", "libmp3lame", \
    "-aq", "2", \
    newname
end

def fix_filename(file)
  foldername = File.dirname(file).split("/").last
  filename = File.basename(file)
  case foldername
  when /\A\d{2}\z/
    unless filename.match(/\A\d{3}_/)
      system "mv", "-v", file, bestname(file)
    end
  when "mp3"
    unless filename.match(/\A\d{4}/)
      puts "Incompatible name for #{file}"
    end
  else
    puts "Incompatible folder #{foldername}"
  end
end

def main
  ARGV.each do |path|
    puts "Checking #{path}"
    Dir.glob(File.join(path, "*.m4a")).sort.each do |file|
      convert_m4a(file)
    end
    Dir.glob(File.join(path, "*.mp3")).sort.each do |file|
      fix_filename(file)
    end
  end
end

main
